# 应用名称
spring.application.name=nacos-config
# 声明环境
spring.profiles.active=product
# nacos中显示的声明 dataid 文件扩展名,默认为properties
spring.cloud.nacos.config.file-extension=yaml
# 你可以通过配置 spring.cloud.nacos.config.refresh.enabled=false 来关闭动态刷新,默认开启
spring.cloud.nacos.config.refresh-enabled=true
# 自定义namespace，进行粗粒度的区分；默认为puclic
spring.cloud.nacos.config.namespace=255c8a42-fe4d-4349-855d-012beadca18b
# 可通过此配置来自定义Group，默认为：DEVELOP_GROUP
spring.cloud.nacos.config.group=DEVELOP_GROUP
# nacos服务器地址
spring.cloud.nacos.config.server-addr=localhost:8848

#可通过设置 spring.cloud.nacos.config.enabled = false 来完全关闭 Spring Cloud Nacos Config
#支持自定义扩展的 Data Id 配置
#Spring Cloud Alibaba Nacos Config 从 0.2.1 版本后，可支持自定义 Data Id 的配置。关于这部分详细的设计可参考 这里。 一个完整的配置案例如下所示：
#
#spring.application.name=opensource-service-provider
#spring.cloud.nacos.config.server-addr=127.0.0.1:8848
#
## config external configuration
## 1、Data Id 在默认的组 DEFAULT_GROUP,不支持配置的动态刷新
#spring.cloud.nacos.config.extension-configs[0].data-id=ext-config-common01.properties
#
## 2、Data Id 不在默认的组，不支持动态刷新
#spring.cloud.nacos.config.extension-configs[1].data-id=ext-config-common02.properties
#spring.cloud.nacos.config.extension-configs[1].group=GLOBALE_GROUP
#
## 3、Data Id 既不在默认的组，也支持动态刷新
#spring.cloud.nacos.config.extension-configs[2].data-id=ext-config-common03.properties
#spring.cloud.nacos.config.extension-configs[2].group=REFRESH_GROUP
#spring.cloud.nacos.config.extension-configs[2].refresh=true
#可以看到:
#
#通过 spring.cloud.nacos.config.extension-configs[n].data-id 的配置方式来支持多个 Data Id 的配置。
#
#通过 spring.cloud.nacos.config.extension-configs[n].group 的配置方式自定义 Data Id 所在的组，不明确配置的话，默认是 DEFAULT_GROUP。
#
#通过 spring.cloud.nacos.config.extension-configs[n].refresh 的配置方式来控制该 Data Id 在配置变更时，是否支持应用中可动态刷新， 感知到最新的配置值。默认是不支持的。
#
#Note
#多个 Data Id 同时配置时，他的优先级关系是 spring.cloud.nacos.config.extension-configs[n].data-id 其中 n 的值越大，优先级越高。
#Note
#spring.cloud.nacos.config.extension-configs[n].data-id 的值必须带文件扩展名，文件扩展名既可支持 properties，又可以支持 yaml/yml。 此时 spring.cloud.nacos.config.file-extension 的配置对自定义扩展配置的 Data Id 文件扩展名没有影响。
#通过自定义扩展的 Data Id 配置，既可以解决多个应用间配置共享的问题，又可以支持一个应用有多个配置文件。
#
#为了更加清晰的在多个应用间配置共享的 Data Id ，你可以通过以下的方式来配置：
#
## 配置支持共享的 Data Id
#spring.cloud.nacos.config.shared-configs[0].data-id=common.yaml
#
## 配置 Data Id 所在分组，缺省默认 DEFAULT_GROUP
#spring.cloud.nacos.config.shared-configs[0].group=GROUP_APP1
#
## 配置Data Id 在配置变更时，是否动态刷新，缺省默认 false
#spring.cloud.nacos.config.shared-configs[0].refresh=true
#可以看到：
#
#通过 spring.cloud.nacos.config.shared-configs[n].data-id 来支持多个共享 Data Id 的配置。
#
#通过 spring.cloud.nacos.config.shared-configs[n].group 来配置自定义 Data Id 所在的组，不明确配置的话，默认是 DEFAULT_GROUP。
#
#通过 spring.cloud.nacos.config.shared-configs[n].refresh 来控制该Data Id在配置变更时，是否支持应用中动态刷新，默认false。
#
#配置的优先级
#Spring Cloud Alibaba Nacos Config 目前提供了三种配置能力从 Nacos 拉取相关的配置。
#
#A: 通过 spring.cloud.nacos.config.shared-configs[n].data-id 支持多个共享 Data Id 的配置
#
#B: 通过 spring.cloud.nacos.config.extension-configs[n].data-id 的方式支持多个扩展 Data Id 的配置
#
#C: 通过内部相关规则(应用名、应用名+ Profile )自动生成相关的 Data Id 配置
#
#当三种方式共同使用时，他们的一个优先级关系是:A < B < C